"use strict";

/**
 * Created by daniel on 20.11.15.
 */

var sheetsApp = angular.module("sheetsApp", []);

/**
 * Created by daniel on 22.11.15.
 */
sheetsApp.factory("Sheets", function ($http, $q) {

  var sheetsFac = {},
      sheets = undefined,
      fetchProm = $http.get("/api/sheets").then(function (resp) {
    sheets = resp.data;
    return sheets;
  });

  sheetsFac.getAll = function () {
    return fetchProm;
  };

  sheetsFac.remove = function (sheetId) {
    sheets.some(function (sheet, index) {
      if (sheet.id === sheetId) {
        sheets.splice(index, 1);
        return true;
      }
    });
  };

  return sheetsFac;
});

sheetsApp.directive("mainHeader", function (Sheets) {

  return {
    restrict: "E",
    replace: true,
    scope: {},
    templateUrl: "/modules/common/directives/main-header/main-header.html",
    link: function link(scope) {
      Sheets.getAll().then(function (sheets) {
        scope.sheets = sheets;
      });
    }
  };
});

/**
 * Created by daniel on 21.11.15.
 */
sheetsApp.directive("sheet", function () {
  return {
    restrict: "E",
    replace: true,
    scope: {
      "sheet": "=data"
    },
    templateUrl: "/modules/common/directives/sheet/sheet.html"
  };
});
/**
 * Created by daniel on 21.11.15.
 */
sheetsApp.directive("sheetGrid", function (Sheets) {
  return {
    restrict: "E",
    replace: true,
    scope: {
      sheetsPerRow: "="
    },
    templateUrl: "/modules/common/directives/sheetgrid/sheetgrid.html",
    link: function link(scope) {
      scope.sheetsPerRow = Number(scope.sheetsPerRow) || 4;
      var allSheets = [];

      var filterSheets = function filterSheets() {
        var sheets = allSheets.filter(function (sheet) {
          var searchRegEx = new RegExp(scope.command, "i");
          var titleMatch = sheet.title.search(searchRegEx);
          var contentMatch = sheet.content.search(searchRegEx);
          return titleMatch !== -1 || contentMatch !== -1;
        });
        return sheets;
      };

      var buildGrid = function buildGrid() {
        var sheets = filterSheets();
        scope.rows = [];
        var currentRow = [];
        sheets.forEach(function (sheet, index) {
          currentRow.push(sheet);
          if (currentRow.length === scope.sheetsPerRow || index === sheets.length - 1) {
            scope.rows.push(currentRow);
            currentRow = [];
          }
        });
        scope.noSheets = sheets.length === 0 ? true : false;
      };

      scope.$watch("command", function (newVal, oldVal) {
        buildGrid();
      });

      Sheets.getAll().then(function (sheets) {
        allSheets = sheets;
        buildGrid();
      });
    }
  };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImNvbW1vbi9mYWN0b3JpZXMvc2hlZXQuZmFjdG9yeS5qcyIsImNvbW1vbi9kaXJlY3RpdmVzL21haW4taGVhZGVyL21haW4taGVhZGVyLmRpcmVjdGl2ZS5qcyIsImNvbW1vbi9kaXJlY3RpdmVzL3NoZWV0L3NoZWV0LmRpcmVjdGl2ZS5qcyIsImNvbW1vbi9kaXJlY3RpdmVzL3NoZWV0Z3JpZC9zaGVldGdyaWQuZGlyZWN0aXZlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUlBLElBQUEsU0FBQSxHQUFBLE9BQUEsQ0FBQSxNQUFBLENBQUEsV0FBQSxFQUFBLEVBQUEsQ0FBQTs7Ozs7QUFBQSxBQ0RBLFNBQUEsQ0FBQSxPQUFBLENBQUEsUUFBQSxFQUFBLFVBQUEsS0FBQSxFQUFBLEVBQUEsRUFBQTs7QUFFQSxNQUFBLFNBQUEsR0FBQSxFQUFBO01BQ0EsTUFBQSxZQUFBO01BQ0EsU0FBQSxHQUFBLEtBQUEsQ0FBQSxHQUFBLENBQUEsYUFBQSxDQUFBLENBQUEsSUFBQSxDQUFBLFVBQUEsSUFBQSxFQUFBO0FBQ0EsVUFBQSxHQUFBLElBQUEsQ0FBQSxJQUFBLENBQUE7QUFDQSxXQUFBLE1BQUEsQ0FBQTtHQUNBLENBQUEsQ0FBQTs7QUFJQSxXQUFBLENBQUEsTUFBQSxHQUFBLFlBQUE7QUFDQSxXQUFBLFNBQUEsQ0FBQTtHQUNBLENBQUE7O0FBRUEsV0FBQSxDQUFBLE1BQUEsR0FBQSxVQUFBLE9BQUEsRUFBQTtBQUNBLFVBQUEsQ0FBQSxJQUFBLENBQUEsVUFBQSxLQUFBLEVBQUEsS0FBQSxFQUFBO0FBQ0EsVUFBQSxLQUFBLENBQUEsRUFBQSxLQUFBLE9BQUEsRUFBQTtBQUNBLGNBQUEsQ0FBQSxNQUFBLENBQUEsS0FBQSxFQUFBLENBQUEsQ0FBQSxDQUFBO0FBQ0EsZUFBQSxJQUFBLENBQUE7T0FDQTtLQUNBLENBQUEsQ0FBQTtHQUNBLENBQUE7O0FBRUEsU0FBQSxTQUFBLENBQUE7Q0FDQSxDQUFBLENBQUE7O0FDM0JBLFNBQUEsQ0FBQSxTQUFBLENBQUEsWUFBQSxFQUFBLFVBQUEsTUFBQSxFQUFBOztBQUVBLFNBQUE7QUFDQSxZQUFBLEVBQUEsR0FBQTtBQUNBLFdBQUEsRUFBQSxJQUFBO0FBQ0EsU0FBQSxFQUFBLEVBQUE7QUFDQSxlQUFBLEVBQUEseURBQUE7QUFDQSxRQUFBLEVBQUEsY0FBQSxLQUFBLEVBQUE7QUFDQSxZQUFBLENBQUEsTUFBQSxFQUFBLENBQUEsSUFBQSxDQUFBLFVBQUEsTUFBQSxFQUFBO0FBQ0EsYUFBQSxDQUFBLE1BQUEsR0FBQSxNQUFBLENBQUE7T0FDQSxDQUFBLENBQUE7S0FDQTtHQUNBLENBQUE7Q0FHQSxDQUFBOzs7OztBQUFBLEFDYkEsU0FBQSxDQUFBLFNBQUEsQ0FBQSxPQUFBLEVBQUEsWUFBQTtBQUNBLFNBQUE7QUFDQSxZQUFBLEVBQUEsR0FBQTtBQUNBLFdBQUEsRUFBQSxJQUFBO0FBQ0EsU0FBQSxFQUFBO0FBQ0EsYUFBQSxFQUFBLE9BQUE7S0FDQTtBQUNBLGVBQUEsRUFBQSw2Q0FBQTtHQUNBLENBQUE7Q0FDQSxDQUFBOzs7O0FBQUEsQUNUQSxTQUFBLENBQUEsU0FBQSxDQUFBLFdBQUEsRUFBQSxVQUFBLE1BQUEsRUFBQTtBQUNBLFNBQUE7QUFDQSxZQUFBLEVBQUEsR0FBQTtBQUNBLFdBQUEsRUFBQSxJQUFBO0FBQ0EsU0FBQSxFQUFBO0FBQ0Esa0JBQUEsRUFBQSxHQUFBO0tBQ0E7QUFDQSxlQUFBLEVBQUEscURBQUE7QUFDQSxRQUFBLEVBQUEsY0FBQSxLQUFBLEVBQUE7QUFDQSxXQUFBLENBQUEsWUFBQSxHQUFBLE1BQUEsQ0FBQSxLQUFBLENBQUEsWUFBQSxDQUFBLElBQUEsQ0FBQSxDQUFBO0FBQ0EsVUFBQSxTQUFBLEdBQUEsRUFBQSxDQUFBOztBQUVBLFVBQUEsWUFBQSxHQUFBLFNBQUEsWUFBQSxHQUFBO0FBQ0EsWUFBQSxNQUFBLEdBQUEsU0FBQSxDQUFBLE1BQUEsQ0FBQSxVQUFBLEtBQUEsRUFBQTtBQUNBLGNBQUEsV0FBQSxHQUFBLElBQUEsTUFBQSxDQUFBLEtBQUEsQ0FBQSxPQUFBLEVBQUEsR0FBQSxDQUFBLENBQUE7QUFDQSxjQUFBLFVBQUEsR0FBQSxLQUFBLENBQUEsS0FBQSxDQUFBLE1BQUEsQ0FBQSxXQUFBLENBQUEsQ0FBQTtBQUNBLGNBQUEsWUFBQSxHQUFBLEtBQUEsQ0FBQSxPQUFBLENBQUEsTUFBQSxDQUFBLFdBQUEsQ0FBQSxDQUFBO0FBQ0EsaUJBQUEsVUFBQSxLQUFBLENBQUEsQ0FBQSxJQUFBLFlBQUEsS0FBQSxDQUFBLENBQUEsQ0FBQTtTQUNBLENBQUEsQ0FBQTtBQUNBLGVBQUEsTUFBQSxDQUFBO09BQ0EsQ0FBQTs7QUFFQSxVQUFBLFNBQUEsR0FBQSxTQUFBLFNBQUEsR0FBQTtBQUNBLFlBQUEsTUFBQSxHQUFBLFlBQUEsRUFBQSxDQUFBO0FBQ0EsYUFBQSxDQUFBLElBQUEsR0FBQSxFQUFBLENBQUE7QUFDQSxZQUFBLFVBQUEsR0FBQSxFQUFBLENBQUE7QUFDQSxjQUFBLENBQUEsT0FBQSxDQUFBLFVBQUEsS0FBQSxFQUFBLEtBQUEsRUFBQTtBQUNBLG9CQUFBLENBQUEsSUFBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBO0FBQ0EsY0FBQSxVQUFBLENBQUEsTUFBQSxLQUFBLEtBQUEsQ0FBQSxZQUFBLElBQUEsS0FBQSxLQUFBLE1BQUEsQ0FBQSxNQUFBLEdBQUEsQ0FBQSxFQUFBO0FBQ0EsaUJBQUEsQ0FBQSxJQUFBLENBQUEsSUFBQSxDQUFBLFVBQUEsQ0FBQSxDQUFBO0FBQ0Esc0JBQUEsR0FBQSxFQUFBLENBQUE7V0FDQTtTQUNBLENBQUEsQ0FBQTtBQUNBLGFBQUEsQ0FBQSxRQUFBLEdBQUEsTUFBQSxDQUFBLE1BQUEsS0FBQSxDQUFBLEdBQUEsSUFBQSxHQUFBLEtBQUEsQ0FBQTtPQUNBLENBQUE7O0FBRUEsV0FBQSxDQUFBLE1BQUEsQ0FBQSxTQUFBLEVBQUEsVUFBQSxNQUFBLEVBQUEsTUFBQSxFQUFBO0FBQ0EsaUJBQUEsRUFBQSxDQUFBO09BQ0EsQ0FBQSxDQUFBOztBQUVBLFlBQUEsQ0FBQSxNQUFBLEVBQUEsQ0FBQSxJQUFBLENBQUEsVUFBQSxNQUFBLEVBQUE7QUFDQSxpQkFBQSxHQUFBLE1BQUEsQ0FBQTtBQUNBLGlCQUFBLEVBQUEsQ0FBQTtPQUNBLENBQUEsQ0FBQTtLQUdBO0dBQ0EsQ0FBQTtDQUNBLENBQUEsQ0FBQSIsImZpbGUiOiJzaGVldHMtYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVkIGJ5IGRhbmllbCBvbiAyMC4xMS4xNS5cbiAqL1xuXG5sZXQgc2hlZXRzQXBwID0gYW5ndWxhci5tb2R1bGUoXCJzaGVldHNBcHBcIiwgW10pO1xuXG4iLCIvKipcbiAqIENyZWF0ZWQgYnkgZGFuaWVsIG9uIDIyLjExLjE1LlxuICovXG5zaGVldHNBcHAuZmFjdG9yeShcIlNoZWV0c1wiLCAoJGh0dHAsICRxKSA9PiB7XG5cbiAgICBsZXQgc2hlZXRzRmFjID0ge30sXG4gICAgXHRzaGVldHMsXG5cdFx0ZmV0Y2hQcm9tID0gJGh0dHAuZ2V0KFwiL2FwaS9zaGVldHNcIikudGhlbigocmVzcCkgPT4ge1xuXHRcdFx0c2hlZXRzID0gcmVzcC5kYXRhO1xuXHRcdFx0cmV0dXJuIHNoZWV0cztcblx0XHR9KTtcblxuXG5cbiAgICBzaGVldHNGYWMuZ2V0QWxsID0gKCkgPT4ge1xuXHRcdHJldHVybiBmZXRjaFByb207XG4gICAgfTtcblxuXHRzaGVldHNGYWMucmVtb3ZlID0gKHNoZWV0SWQpID0+IHtcblx0XHRzaGVldHMuc29tZSgoc2hlZXQsIGluZGV4KSA9PiB7XG5cdFx0XHRpZiAoc2hlZXQuaWQgPT09IHNoZWV0SWQpIHtcblx0XHRcdFx0c2hlZXRzLnNwbGljZShpbmRleCwgMSk7XG5cdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHR9O1xuXG4gICAgcmV0dXJuIHNoZWV0c0ZhYztcbn0pOyIsIlxuc2hlZXRzQXBwLmRpcmVjdGl2ZShcIm1haW5IZWFkZXJcIiwgKFNoZWV0cykgPT4ge1xuXG5cdHJldHVybiB7XG5cdFx0cmVzdHJpY3Q6IFwiRVwiLFxuXHRcdHJlcGxhY2U6IHRydWUsXG5cdFx0c2NvcGU6IHt9LFxuXHRcdHRlbXBsYXRlVXJsOiBcIi9tb2R1bGVzL2NvbW1vbi9kaXJlY3RpdmVzL21haW4taGVhZGVyL21haW4taGVhZGVyLmh0bWxcIixcblx0XHRsaW5rOiBmdW5jdGlvbiAoc2NvcGUpIHtcblx0XHRcdFNoZWV0cy5nZXRBbGwoKS50aGVuKChzaGVldHMpID0+IHtcblx0XHRcdFx0c2NvcGUuc2hlZXRzID0gc2hlZXRzO1xuXHRcdFx0fSk7XG5cdFx0fVxuXHR9O1xuXG5cbn0pO1xuIiwiLyoqXG4gKiBDcmVhdGVkIGJ5IGRhbmllbCBvbiAyMS4xMS4xNS5cbiAqL1xuc2hlZXRzQXBwLmRpcmVjdGl2ZShcInNoZWV0XCIsICgpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICByZXN0cmljdDogXCJFXCIsXG4gICAgICAgIHJlcGxhY2U6IHRydWUsXG4gICAgICAgIHNjb3BlOiB7XG4gICAgICAgICAgICBcInNoZWV0XCI6IFwiPWRhdGFcIlxuICAgICAgICB9LFxuICAgICAgICB0ZW1wbGF0ZVVybDogXCIvbW9kdWxlcy9jb21tb24vZGlyZWN0aXZlcy9zaGVldC9zaGVldC5odG1sXCJcbiAgICB9O1xufSk7IiwiLyoqXG4gKiBDcmVhdGVkIGJ5IGRhbmllbCBvbiAyMS4xMS4xNS5cbiAqL1xuc2hlZXRzQXBwLmRpcmVjdGl2ZShcInNoZWV0R3JpZFwiLCAoU2hlZXRzKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcmVzdHJpY3Q6IFwiRVwiLFxuICAgICAgICByZXBsYWNlOiB0cnVlLFxuICAgICAgICBzY29wZToge1xuICAgICAgICAgICAgc2hlZXRzUGVyUm93OiBcIj1cIlxuICAgICAgICB9LFxuICAgICAgICB0ZW1wbGF0ZVVybDogXCIvbW9kdWxlcy9jb21tb24vZGlyZWN0aXZlcy9zaGVldGdyaWQvc2hlZXRncmlkLmh0bWxcIixcbiAgICAgICAgbGluazogKHNjb3BlKSA9PiB7XG4gICAgICAgICAgICBzY29wZS5zaGVldHNQZXJSb3cgPSBOdW1iZXIoc2NvcGUuc2hlZXRzUGVyUm93KSB8fCA0O1xuICAgICAgICAgICAgbGV0IGFsbFNoZWV0cyA9IFtdO1xuXG4gICAgICAgICAgICBsZXQgZmlsdGVyU2hlZXRzID0gKCkgPT4ge1xuXHRcdFx0XHRsZXQgc2hlZXRzID0gYWxsU2hlZXRzLmZpbHRlcigoc2hlZXQpID0+IHtcblx0XHRcdFx0XHRsZXQgc2VhcmNoUmVnRXggPSBuZXcgUmVnRXhwKHNjb3BlLmNvbW1hbmQsIFwiaVwiKTtcblx0XHRcdFx0XHRsZXQgdGl0bGVNYXRjaCA9IHNoZWV0LnRpdGxlLnNlYXJjaChzZWFyY2hSZWdFeCk7XG5cdFx0XHRcdFx0bGV0IGNvbnRlbnRNYXRjaCA9IHNoZWV0LmNvbnRlbnQuc2VhcmNoKHNlYXJjaFJlZ0V4KTtcblx0XHRcdFx0XHRyZXR1cm4gKHRpdGxlTWF0Y2ggIT09IC0xKSB8fCAoY29udGVudE1hdGNoICE9PSAtMSk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRyZXR1cm4gc2hlZXRzO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgbGV0IGJ1aWxkR3JpZCA9ICgpID0+IHtcblx0XHRcdFx0bGV0IHNoZWV0cyA9IGZpbHRlclNoZWV0cygpO1xuXHRcdFx0XHRzY29wZS5yb3dzID0gW107XG4gICAgICAgICAgICAgICAgbGV0IGN1cnJlbnRSb3cgPSBbXTtcbiAgICAgICAgICAgICAgICBzaGVldHMuZm9yRWFjaCgoc2hlZXQsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRSb3cucHVzaChzaGVldCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjdXJyZW50Um93Lmxlbmd0aCA9PT0gc2NvcGUuc2hlZXRzUGVyUm93IHx8IGluZGV4ID09PSBzaGVldHMubGVuZ3RoIC0xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzY29wZS5yb3dzLnB1c2goY3VycmVudFJvdyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50Um93ID0gW107XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcblx0XHRcdFx0c2NvcGUubm9TaGVldHMgPSBzaGVldHMubGVuZ3RoID09PSAwID8gdHJ1ZSA6IGZhbHNlO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgc2NvcGUuJHdhdGNoKFwiY29tbWFuZFwiLCBmdW5jdGlvbiAobmV3VmFsLCBvbGRWYWwpIHtcblx0XHRcdFx0YnVpbGRHcmlkKCk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgU2hlZXRzLmdldEFsbCgpLnRoZW4oKHNoZWV0cykgPT4ge1xuICAgICAgICAgICAgICAgIGFsbFNoZWV0cyA9IHNoZWV0cztcblx0XHRcdFx0YnVpbGRHcmlkKCk7XG5cdFx0XHR9KTtcblxuXG4gICAgICAgIH1cbiAgICB9O1xufSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
