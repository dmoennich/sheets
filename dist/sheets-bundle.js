"use strict";

/**
 * Created by daniel on 20.11.15.
 */

var sheetsApp = angular.module("sheetsApp", []);

/**
 * Created by daniel on 22.11.15.
 */
sheetsApp.factory("Sheets", function ($http) {

    var sheetsFac = {};

    sheetsFac.getAll = function () {
        return $http.get("/api/sheets").then(function (resp) {
            return resp.data;
        });
    };

    return sheetsFac;
});
/**
 * Created by daniel on 21.11.15.
 */
sheetsApp.directive("sheet", function () {
    return {
        restrict: "E",
        replace: true,
        scope: {
            "sheet": "=data"
        },
        templateUrl: "/modules/common/directives/sheet/sheet.html",
        link: function link(scope) {}
    };
});
/**
 * Created by daniel on 21.11.15.
 */
sheetsApp.directive("sheetGrid", function (Sheets) {
    return {
        restrict: "E",
        replace: true,
        scope: {
            sheets: "=",
            sheetsPerRow: "=sheetsPerRow"
        },
        templateUrl: "/modules/common/directives/sheetgrid/sheetgrid.html",
        link: function link(scope) {
            scope.sheetsPerRow = Number(scope.sheetsPerRow) || 4;
            scope.rows = [];

            Sheets.getAll().then(function (sheets) {
                var currentRow = [];
                sheets.forEach(function (sheet, index) {
                    currentRow.push(sheet);
                    if (currentRow.length === scope.sheetsPerRow || index === sheets.length - 1) {
                        scope.rows.push(currentRow);
                        currentRow = [];
                    }
                });
                if (sheets.length === 0) {
                    scope.noSheets = true;
                }
            });
        }
    };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImNvbW1vbi9mYWN0b3JpZXMvc2hlZXQuZmFjdG9yeS5qcyIsImNvbW1vbi9kaXJlY3RpdmVzL3NoZWV0L3NoZWV0LmRpcmVjdGl2ZS5qcyIsImNvbW1vbi9kaXJlY3RpdmVzL3NoZWV0Z3JpZC9zaGVldGdyaWQuZGlyZWN0aXZlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUlBLElBQUEsU0FBQSxHQUFBLE9BQUEsQ0FBQSxNQUFBLENBQUEsV0FBQSxFQUFBLEVBQUEsQ0FBQTs7Ozs7QUFBQSxBQ0RBLFNBQUEsQ0FBQSxPQUFBLENBQUEsUUFBQSxFQUFBLFVBQUEsS0FBQSxFQUFBOztBQUVBLFFBQUEsU0FBQSxHQUFBLEVBQUEsQ0FBQTs7QUFFQSxhQUFBLENBQUEsTUFBQSxHQUFBLFlBQUE7QUFDQSxlQUFBLEtBQUEsQ0FBQSxHQUFBLENBQUEsYUFBQSxDQUFBLENBQUEsSUFBQSxDQUFBLFVBQUEsSUFBQTttQkFBQSxJQUFBLENBQUEsSUFBQTtTQUFBLENBQUEsQ0FBQTtLQUNBLENBQUE7O0FBRUEsV0FBQSxTQUFBLENBQUE7Q0FFQSxDQUFBOzs7O0FBQUEsQUNWQSxTQUFBLENBQUEsU0FBQSxDQUFBLE9BQUEsRUFBQSxZQUFBO0FBQ0EsV0FBQTtBQUNBLGdCQUFBLEVBQUEsR0FBQTtBQUNBLGVBQUEsRUFBQSxJQUFBO0FBQ0EsYUFBQSxFQUFBO0FBQ0EsbUJBQUEsRUFBQSxPQUFBO1NBQ0E7QUFDQSxtQkFBQSxFQUFBLDZDQUFBO0FBQ0EsWUFBQSxFQUFBLGNBQUEsS0FBQSxFQUFBLEVBQ0E7S0FDQSxDQUFBO0NBQ0EsQ0FBQTs7OztBQUFBLEFDWEEsU0FBQSxDQUFBLFNBQUEsQ0FBQSxXQUFBLEVBQUEsVUFBQSxNQUFBLEVBQUE7QUFDQSxXQUFBO0FBQ0EsZ0JBQUEsRUFBQSxHQUFBO0FBQ0EsZUFBQSxFQUFBLElBQUE7QUFDQSxhQUFBLEVBQUE7QUFDQSxrQkFBQSxFQUFBLEdBQUE7QUFDQSx3QkFBQSxFQUFBLGVBQUE7U0FDQTtBQUNBLG1CQUFBLEVBQUEscURBQUE7QUFDQSxZQUFBLEVBQUEsY0FBQSxLQUFBLEVBQUE7QUFDQSxpQkFBQSxDQUFBLFlBQUEsR0FBQSxNQUFBLENBQUEsS0FBQSxDQUFBLFlBQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQTtBQUNBLGlCQUFBLENBQUEsSUFBQSxHQUFBLEVBQUEsQ0FBQTs7QUFFQSxrQkFBQSxDQUFBLE1BQUEsRUFBQSxDQUFBLElBQUEsQ0FBQSxVQUFBLE1BQUEsRUFBQTtBQUNBLG9CQUFBLFVBQUEsR0FBQSxFQUFBLENBQUE7QUFDQSxzQkFBQSxDQUFBLE9BQUEsQ0FBQSxVQUFBLEtBQUEsRUFBQSxLQUFBLEVBQUE7QUFDQSw4QkFBQSxDQUFBLElBQUEsQ0FBQSxLQUFBLENBQUEsQ0FBQTtBQUNBLHdCQUFBLFVBQUEsQ0FBQSxNQUFBLEtBQUEsS0FBQSxDQUFBLFlBQUEsSUFBQSxLQUFBLEtBQUEsTUFBQSxDQUFBLE1BQUEsR0FBQSxDQUFBLEVBQUE7QUFDQSw2QkFBQSxDQUFBLElBQUEsQ0FBQSxJQUFBLENBQUEsVUFBQSxDQUFBLENBQUE7QUFDQSxrQ0FBQSxHQUFBLEVBQUEsQ0FBQTtxQkFDQTtpQkFDQSxDQUFBLENBQUE7QUFDQSxvQkFBQSxNQUFBLENBQUEsTUFBQSxLQUFBLENBQUEsRUFBQTtBQUNBLHlCQUFBLENBQUEsUUFBQSxHQUFBLElBQUEsQ0FBQTtpQkFDQTthQUNBLENBQUEsQ0FBQTtTQUdBO0tBQ0EsQ0FBQTtDQUNBLENBQUEsQ0FBQSIsImZpbGUiOiJzaGVldHMtYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVkIGJ5IGRhbmllbCBvbiAyMC4xMS4xNS5cbiAqL1xuXG5sZXQgc2hlZXRzQXBwID0gYW5ndWxhci5tb2R1bGUoXCJzaGVldHNBcHBcIiwgW10pO1xuXG4iLCIvKipcbiAqIENyZWF0ZWQgYnkgZGFuaWVsIG9uIDIyLjExLjE1LlxuICovXG5zaGVldHNBcHAuZmFjdG9yeShcIlNoZWV0c1wiLCAoJGh0dHApID0+IHtcblxuICAgIGxldCBzaGVldHNGYWMgPSB7fTtcblxuICAgIHNoZWV0c0ZhYy5nZXRBbGwgPSAoKSA9PiB7XG4gICAgICAgIHJldHVybiAkaHR0cC5nZXQoXCIvYXBpL3NoZWV0c1wiKS50aGVuKChyZXNwKSA9PiByZXNwLmRhdGEpO1xuICAgIH07XG5cbiAgICByZXR1cm4gc2hlZXRzRmFjO1xuXG59KTsiLCIvKipcbiAqIENyZWF0ZWQgYnkgZGFuaWVsIG9uIDIxLjExLjE1LlxuICovXG5zaGVldHNBcHAuZGlyZWN0aXZlKFwic2hlZXRcIiwgKCkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIHJlc3RyaWN0OiBcIkVcIixcbiAgICAgICAgcmVwbGFjZTogdHJ1ZSxcbiAgICAgICAgc2NvcGU6IHtcbiAgICAgICAgICAgIFwic2hlZXRcIjogXCI9ZGF0YVwiXG4gICAgICAgIH0sXG4gICAgICAgIHRlbXBsYXRlVXJsOiBcIi9tb2R1bGVzL2NvbW1vbi9kaXJlY3RpdmVzL3NoZWV0L3NoZWV0Lmh0bWxcIixcbiAgICAgICAgbGluazogKHNjb3BlKSA9PiB7XG4gICAgICAgIH1cbiAgICB9O1xufSk7IiwiLyoqXG4gKiBDcmVhdGVkIGJ5IGRhbmllbCBvbiAyMS4xMS4xNS5cbiAqL1xuc2hlZXRzQXBwLmRpcmVjdGl2ZShcInNoZWV0R3JpZFwiLCAoU2hlZXRzKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcmVzdHJpY3Q6IFwiRVwiLFxuICAgICAgICByZXBsYWNlOiB0cnVlLFxuICAgICAgICBzY29wZToge1xuICAgICAgICAgICAgc2hlZXRzOiBcIj1cIixcbiAgICAgICAgICAgIHNoZWV0c1BlclJvdzogXCI9c2hlZXRzUGVyUm93XCJcbiAgICAgICAgfSxcbiAgICAgICAgdGVtcGxhdGVVcmw6IFwiL21vZHVsZXMvY29tbW9uL2RpcmVjdGl2ZXMvc2hlZXRncmlkL3NoZWV0Z3JpZC5odG1sXCIsXG4gICAgICAgIGxpbms6IChzY29wZSkgPT4ge1xuICAgICAgICAgICAgc2NvcGUuc2hlZXRzUGVyUm93ID0gTnVtYmVyKHNjb3BlLnNoZWV0c1BlclJvdykgfHwgNDtcbiAgICAgICAgICAgIHNjb3BlLnJvd3MgPSBbXTtcblxuICAgICAgICAgICAgU2hlZXRzLmdldEFsbCgpLnRoZW4oKHNoZWV0cykgPT4ge1xuXHRcdFx0XHRsZXQgY3VycmVudFJvdyA9IFtdO1xuXHRcdFx0XHRzaGVldHMuZm9yRWFjaCgoc2hlZXQsIGluZGV4KSA9PiB7XG5cdFx0XHRcdFx0Y3VycmVudFJvdy5wdXNoKHNoZWV0KTtcblx0XHRcdFx0XHRpZiAoY3VycmVudFJvdy5sZW5ndGggPT09IHNjb3BlLnNoZWV0c1BlclJvdyB8fCBpbmRleCA9PT0gc2hlZXRzLmxlbmd0aCAtMSkge1xuXHRcdFx0XHRcdFx0c2NvcGUucm93cy5wdXNoKGN1cnJlbnRSb3cpO1xuXHRcdFx0XHRcdFx0Y3VycmVudFJvdyA9IFtdO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSk7XG4gICAgICAgICAgICAgICAgaWYgKHNoZWV0cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgc2NvcGUubm9TaGVldHMgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cblx0XHRcdH0pO1xuXG5cbiAgICAgICAgfVxuICAgIH07XG59KTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
